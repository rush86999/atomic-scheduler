apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
spec:
  serviceName: "postgres-headless" # Must match the headless Service name
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres:14-alpine # As specified
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB # Name of the database to create
              value: "atomicdb" # As specified
            - name: PGDATA # Explicitly set the data directory path
              value: "/var/lib/postgresql/data/pgdata" # Standard for official images when using a subpath in the volume
          volumeMounts:
            - name: postgres-data # This name must match a volumeClaimTemplates.metadata.name
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                # Use the user from the secret. Ensure this user can connect to the default 'postgres' db or POSTGRES_DB.
                # pg_isready -U expects the username to be passed.
                - "pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB) -h 127.0.0.1 -p 5432"
            env: # Pass credentials to the probe
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: POSTGRES_USER
              - name: POSTGRES_DB
                value: "atomicdb"
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB) -h 127.0.0.1 -p 5432"
            env:
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: POSTGRES_USER
              - name: POSTGRES_DB
                value: "atomicdb"
            initialDelaySeconds: 45
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: postgres-data # This name is referenced in volumeMounts.name
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi # As specified
      # storageClassName: "your-storage-class" # Optional: specify if not using default SC.
