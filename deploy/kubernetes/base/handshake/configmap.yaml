apiVersion: v1
kind: ConfigMap
metadata:
  name: handshake-configmap
  namespace: handshake
data:
  # Hasura GraphQL URL (for internal communication from Handshake service's backend if applicable)
  HASURA_GRAPHQL_GRAPHQL_URL: "http://hasura-service.hasura.svc.cluster.local:8080/v1/graphql"

  # Meeting Assist Admin URL (pointing to the 'functions' service with specific path)
  MEETING_ASSIST_ADMIN_URL: "http://functions-service.functions.svc.cluster.local:3000/schedule-assist/publisherScheduleMeeting/schedule-meeting-to-queue-admin"

  # Public URL for the handshake API itself, potentially exposed via an Ingress.
  # This is used by frontend clients. The ${HOST_NAME} would be replaced by actual domain.
  # The path "/v1/functions/handshake-api/..." suggests it might be a specific route on an API gateway or the functions service.
  # However, the variable name NEXT_PUBLIC_ATOMIC_HANDSHAKE_API implies it's an API provided BY this handshake service itself.
  # If this Handshake service (Next.js app) exposes its own API routes at this path:
  NEXT_PUBLIC_ATOMIC_HANDSHAKE_API: "https://${HOST_NAME}/v1/functions/handshake-api/createRecurMeetAssists/create-recur-meet-assists-public"

  # Default port for this Next.js Handshake application
  PORT: "3000"

  # Node environment
  NODE_ENV: "production"

  # Logging level (optional, can be added if needed)
  # LOG_LEVEL: "info"

  # Placeholder for the external host name. This variable itself isn't typically used directly by Next.js like this,
  # but the value would be substituted into the URLs above during deployment or by an Ingress controller.
  HOST_NAME: "your-app-domain.com" # Example placeholder, actual value depends on deployment context.
