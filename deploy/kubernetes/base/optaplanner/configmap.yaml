apiVersion: v1
kind: ConfigMap
metadata:
  name: optaplanner-configmap
  namespace: optaplanner
data:
  # Quarkus Datasource Configuration (credentials will be injected from secret)
  # The JDBC URL should not contain username/password here.
  # Quarkus will construct the full URL using QUARKUS_DATASOURCE_USERNAME and QUARKUS_DATASOURCE_PASSWORD from secrets.
  QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres-service.postgres.svc.cluster.local:5432/atomicdb"
  QUARKUS_DATASOURCE_DB-KIND: "postgresql"

  # Optaplanner Application Authentication (distinct from database credentials)
  # This USERNAME is for the Optaplanner application's own auth mechanism,
  # paired with the PASSWORD (from API_TOKEN in secrets).
  USERNAME: "admin"

  # Quarkus HTTP Configuration
  QUARKUS_HTTP_PORT: "8081" # Port the Quarkus application will listen on

  # Logging Configuration
  QUARKUS_LOG_LEVEL: "INFO" # Default log level (INFO, DEBUG, WARN, ERROR)
  # QUARKUS_LOG_CONSOLE_FORMAT: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n" # Example format

  # Optaplanner specific non-sensitive settings, if any
  # Example:
  # QUARKUS_OPTAPLANNER_SOLVER_ENVIRONMENT_MODE: "PRODUCTION" # Or REPRODUCIBLE, NON_INTRUSIVE_FULL_ASSERT, etc.
  # QUARKUS_OPTAPLANNER_SOLVER_DAEMON: "false" # If not running as a daemon

  # Any other non-sensitive configurations required by the Optaplanner service.
  # For example, if DB_HOST, DB_PORT, DB_NAME were needed by an entrypoint script to construct the JDBC URL,
  # but Quarkus typically handles this if QUARKUS_DATASOURCE_JDBC_URL, _USERNAME, _PASSWORD are set.
  # DB_HOST: "postgres-service.postgres.svc.cluster.local"
  # DB_PORT: "5432"
  # DB_NAME: "atomicdb"
