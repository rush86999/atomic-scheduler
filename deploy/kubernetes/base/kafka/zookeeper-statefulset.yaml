apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: kafka
  labels:
    app: zookeeper
spec:
  serviceName: "zookeeper-headless" # Must match the headless Service name
  replicas: 1 # For base simplicity
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:5.4.2 # As specified
          imagePullPolicy: IfNotPresent
          ports:
            - name: client
              containerPort: 2181
              protocol: TCP
            - name: server
              containerPort: 2888
              protocol: TCP
            - name: leader-election
              containerPort: 3888
              protocol: TCP
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_DATA_DIR # Path for data
              value: "/var/lib/zookeeper/data"
            - name: ZOOKEEPER_LOG_DIR # Path for logs (or ZOOKEEPER_DATA_LOG_DIR for some older Confluent images)
              value: "/var/lib/zookeeper/log"
            - name: ZOOKEEPER_SERVER_ID # For single node, typically 1
              value: "1"
            # For single node, ZOOKEEPER_SERVERS can be omitted or point to itself.
            # Confluent images often expect this for proper initialization, even for a single instance.
            # The FQDN format is pod-name.service-name.namespace.svc.cluster.local
            - name: ZOOKEEPER_SERVERS
              value: "zookeeper-0.zookeeper-headless.kafka.svc.cluster.local:2888:3888"
          volumeMounts:
            - name: data # Corresponds to volumeClaimTemplates.metadata.name for data
              mountPath: /var/lib/zookeeper/data
            - name: log  # Corresponds to volumeClaimTemplates.metadata.name for logs
              mountPath: /var/lib/zookeeper/log
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "echo ruok | nc localhost 2181 | grep imok"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "echo ruok | nc localhost 2181 | grep imok"
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: data # Name for the data PVC template
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi # As specified
      # storageClassName: "your-storage-class" # Optional
  - metadata:
      name: log # Name for the log PVC template
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi # As specified
      # storageClassName: "your-storage-class" # Optional
