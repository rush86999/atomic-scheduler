apiVersion: v1
kind: ConfigMap
metadata:
  name: app-configmap
  namespace: app
data:
  # Core Application Settings
  NODE_ENV: "production"
  PORT: "3000" # Port the Next.js app runs on
  LOG_LEVEL: "info" # Example log level
  HOST_NAME: "your-app-domain.com" # Placeholder for actual external domain, used in other NEXT_PUBLIC_ URLs

  # NEXT_PUBLIC_ variables for client-side consumption
  # These should point to externally accessible URLs or be general config values.

  # Hasura URLs (for client-side access, should be external endpoint)
  NEXT_PUBLIC_HASURA_GRAPHQL_GRAPHQL_URL: "https://${HOST_NAME}/v1/graphql"
  NEXT_PUBLIC_HASURA_GRAPHQL_WS_URL: "wss://${HOST_NAME}/v1/graphql" # Note: docker-compose had /v1/graphql, not /v1alpha1/graphql

  # Functions Service related URLs (external endpoints)
  NEXT_PUBLIC_FUNCTIONS_BASE_URL: "https://${HOST_NAME}/v1/functions" # Base for various function calls
  NEXT_PUBLIC_CHAT_WS_API_URL: "wss://${HOST_NAME}/v1/functions/websocket" # WebSocket endpoint on functions service, exposed externally

  # Handshake API URL (external endpoint)
  NEXT_PUBLIC_ATOMIC_HANDSHAKE_API: "https://${HOST_NAME}/v1/functions/handshake-api/createRecurMeetAssists/create-recur-meet-assists-public"

  # OAuth related URLs (external endpoints of the OAuth service)
  NEXT_PUBLIC_AUTH_URL: "https://${HOST_NAME}/v1/oauth" # Base URL for the OAuth service

  # Optaplanner API URL (external endpoint)
  NEXT_PUBLIC_OPTAPLANNER_API_URL: "https://${HOST_NAME}/v1/optaplanner/api"

  # S3/Storage related (external access if clients interact directly, or could be via functions)
  # If clients upload/download directly, these need to be external MinIO URLs or presigned URLs from functions.
  # For simplicity, providing a placeholder for an external images domain.
  NEXT_PUBLIC_IMAGES_DOMAIN: "${HOST_NAME}" # Could be CDN or direct S3/Minio external URL base
  # NEXT_PUBLIC_S3_ENDPOINT_URL: "https://${MINIO_HOST_NAME}" # If Minio has its own external domain
  # NEXT_PUBLIC_S3_BUCKET_NAME: "atomic-assets"

  # Zoom Integration (public client ID for frontend)
  NEXT_PUBLIC_ZOOM_CLIENT_ID: "YOUR_PUBLIC_ZOOM_CLIENT_ID_PLACEHOLDER" # This might be same as secret ZOOM_CLIENT_ID or a different public one
  NEXT_PUBLIC_ZOOM_REDIRECT_URL: "https://${HOST_NAME}/oauth/zoom/callback" # Callback to your app/oauth service

  # Google OAuth (public client IDs for frontend)
  # These are often public. If the ARGs in secret.yaml are for build-time and these are runtime for client, they can be here.
  # If GOOGLE_CLIENT_ID_ATOMIC_WEB from secret is THE source, then this should be mapped from secret in deployment.
  NEXT_PUBLIC_GOOGLE_CLIENT_ID_WEB: "YOUR_GOOGLE_CLIENT_ID_WEB_PLACEHOLDER_PUBLIC"
  NEXT_PUBLIC_GOOGLE_CLIENT_ID_ATOMIC_WEB: "YOUR_GOOGLE_CLIENT_ID_ATOMIC_WEB_PLACEHOLDER_PUBLIC"

  # External Services
  NEXT_PUBLIC_POSTHOG_HOST: "https://app.posthog.com" # As per compose
  NEXT_PUBLIC_POSTHOG_KEY: "" # Placeholder, fill if used. Usually public.
  NEXT_PUBLIC_STRIPE_KEY: "" # Stripe Publishable Key. Placeholder, fill if used. Usually public.
  NEXT_PUBLIC_CALCOM_URL: "https://cal.com" # As per compose

  # General App Info & Links
  NEXT_PUBLIC_APP_NAME: "Atomic Entrepreneur"
  NEXT_PUBLIC_APP_URL: "https://${HOST_NAME}" # Main external URL of this 'app' service
  NEXT_PUBLIC_ENVIRONMENT: "production" # Client-side environment flag
  NEXT_PUBLIC_SENTRY_DSN: "" # Sentry DSN for frontend error tracking. Placeholder.
  NEXT_PUBLIC_SENTRY_ENVIRONMENT: "production"
  NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: "" # Google Analytics Tracking ID. Placeholder.
  NEXT_PUBLIC_TERMS_URL: "https://${HOST_NAME}/terms"
  NEXT_PUBLIC_PRIVACY_URL: "https://${HOST_NAME}/privacy"
  NEXT_PUBLIC_CONTACT_EMAIL: "support@example.com"
  NEXT_PUBLIC_MAINTENANCE_MODE: "false"

  # Feature Flags (examples)
  # NEXT_PUBLIC_ENABLE_FEATURE_X: "true"

  # Internal URLs for server-side rendering (SSR) or API routes within the Next.js app, if needed.
  # These should NOT be prefixed with NEXT_PUBLIC_ if they are only for server-side calls.
  # Example (if 'app' service's backend/API routes call 'functions' service internally):
  INTERNAL_FUNCTIONS_URL: "http://functions-service.functions.svc.cluster.local:3000"
  INTERNAL_HASURA_GRAPHQL_URL: "http://hasura-service.hasura.svc.cluster.local:8080/v1/graphql"
  # These are not used by default by NEXT_PUBLIC_ variables but can be used by the app's server-side logic.
  # The original docker-compose for 'app' only listed NEXT_PUBLIC_ variables, so we primarily focus on those.
  # Adding them here for completeness if the app's server-side logic needs them.

  # Placeholder for MinIO external host if different from main app host
  MINIO_HOST_NAME: "minio.your-app-domain.com" # Example placeholder

  # The variables like ${HOST_NAME} and ${MINIO_HOST_NAME} are conceptual placeholders.
  # In a K8s setup, these would be actual domain names configured via Ingress and DNS.
  # The ConfigMap stores the string with the placeholder; substitution happens elsewhere or
  # the application is built to handle such placeholders if they are truly dynamic at runtime.
  # For Next.js, these are typically build-time or server-runtime available. Client-side needs fully resolved URLs.
  # Thus, for client-side (NEXT_PUBLIC_), the ${HOST_NAME} should ideally be resolved before the app consumes it,
  # or the app itself constructs full URLs based on a single NEXT_PUBLIC_APP_URL.
  # For this base configuration, we assume these values are provided at runtime to the server part of Next.js,
  # and then made available to the client, or that build-time substitution happens.
  # The `HOST_NAME` key here is for context; actual substitution into URLs must be handled.
