# deploy/kubernetes/overlays/gcp/patches/traefik-service-gcp-annotations.yaml
# This patch adds GCP Load Balancer specific annotations to the Traefik service.
# It assumes the base Traefik service is named 'traefik', is in the 'traefik-ingress' namespace,
# and is of type LoadBalancer, which on GKE provisions an L4 External Network Load Balancer.

apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: traefik-ingress # Common namespace for Traefik, adjust if different in your base
  annotations:
    # --- Google Cloud Load Balancer Configuration Annotations ---

    # Explicitly set the load balancer scheme to EXTERNAL.
    # For Kubernetes Service type=LoadBalancer on GKE, this is the default behavior,
    # but being explicit can improve clarity and guard against potential future default changes.
    cloud.google.com/load-balancer-scheme: "EXTERNAL"

    # --- Optional: Specify a Static External IP Address ---
    # To use a pre-allocated static external IP address for the Load Balancer,
    # first reserve a static IP in your GCP project and then reference its name or IP address here.
    # Using a reserved IP address by its name (recommended):
    # kubernetes.io/load-balancer-ip: "your-gcp-static-ip-name"
    # Or, directly using the IP address (less flexible, IP must be reserved and static):
    # kubernetes.io/load-balancer-ip: "YOUR.STATIC.IP.ADDRESS"
    # The static IP must be in the same region as the GKE cluster.

    # --- Optional: Network Tier ---
    # Specifies the network tier for the Load Balancer. Default is "PREMIUM".
    # Other option is "STANDARD". Premium Tier uses Google's global network for higher performance.
    # cloud.google.com/network-tier: "PREMIUM"

    # --- Health Check Notes for GKE L4 External Network Load Balancer ---
    # When a Kubernetes Service of type LoadBalancer is created on GKE, an L4 External Network
    # Load Balancer is provisioned. This load balancer uses Google Cloud's regional health checks.
    #
    # Key points regarding health checks for this setup:
    # 1. `externalTrafficPolicy`:
    #    - If set to `Cluster` (default): The GCE health check targets a `healthCheckNodePort`
    #      on all nodes in the cluster. The kube-proxy on each node then load balances traffic
    #      to healthy Traefik pods. Client source IP is NOT preserved.
    #    - If set to `Local`: The GCE health check targets the Traefik pods directly on the nodes
    #      where they are scheduled. This preserves client source IP. Only nodes with healthy
    #      Traefik pods will pass the health check and receive traffic.
    #
    # 2. Pod Readiness: The GCE health check respects the readiness probe of your Traefik pods.
    #    If Traefik's readiness probe (e.g., /ping on the admin port) fails, the pod is marked
    #    unready, and GKE will signal the GCE health check to consider that backend unhealthy.
    #
    # 3. Direct Annotations: Unlike GKE Ingress (L7 Load Balancers) which use `BackendConfig` CRDs
    #    for detailed health check customization, direct annotations on a Service of type LoadBalancer
    #    for customizing the L4 LB's GCE health check path, port, or protocol are limited or not standard.
    #    The health check is largely derived from the Service's port definitions and the readiness
    #    of the backend pods.
    #
    # Recommendation:
    # - Ensure Traefik pods have accurate readiness probes (e.g., targeting `/ping` on port 8080).
    # - Consider setting `externalTrafficPolicy: Local` on the Traefik service if preserving client
    #   source IP is important and your setup supports it (nodes are directly routable or appropriate
    #   firewall rules for node-to-node health checks are in place if needed by the LB).
    # - No specific health check *path* or *protocol* annotations are typically needed here for an L4 LB,
    #   as it operates at Layer 4 (TCP/UDP). The GCE health check will verify reachability on the
    #   service port(s) directed to healthy pods.

    # --- Optional: Load Balancer Subnet (More relevant for Internal LBs or specific network topologies) ---
    # For External L4 LBs, GKE typically handles subnet selection automatically from the cluster's network.
    # If needed for specific scenarios (e.g., multi-NIC or complex VPCs), consult GKE documentation.
    # networking.gke.io/load-balancer-subnet: "projects/YOUR_PROJECT_ID/regions/YOUR_REGION/subnetworks/YOUR_SUBNET_NAME"

    # Note: The specific annotations available and their behaviors can change with GKE versions.
    # Always refer to the official GKE documentation for LoadBalancer services and annotations.
