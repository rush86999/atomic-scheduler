# deploy/kubernetes/overlays/gcp/kustomization.yaml
# This Kustomization file defines the GCP-specific overlay for the Kubernetes deployment.
# It builds upon the 'base' configuration and applies GCP-specific resources, patches, and image overrides.

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 1. Include the base configuration
# This brings in all the common Kubernetes manifests defined in the base layer.
bases:
  - ../../base # Points to deploy/kubernetes/base

# 2. List GCP-specific resources to be added or modified.
#    SecretProviderClasses are specific to this GCP overlay for integrating with Google Secret Manager.
resources:
  - resources/secret-provider-classes-gcp.yaml

# 3. List patches to apply to the base resources for the GCP environment.
#    These patches customize base resources for GCP-specific needs.
patchesStrategicMerge:
  # Patch to update secret references in Deployments/StatefulSets to use
  # Kubernetes Secrets created by SecretProviderClasses (sourcing from Google Secret Manager).
  - patches/update-secret-references-gcp.yaml

  # Patch to annotate default ServiceAccounts in application namespaces for GKE Workload Identity,
  # linking them to a GCP Service Account that has permissions to access secrets.
  - patches/serviceaccount-workload-identity-annotations.yaml

  # Patch to add GCP Load Balancer specific annotations to the Traefik service.
  - patches/traefik-service-gcp-annotations.yaml

  # --- Optional: Placeholder for other GCP-specific patches ---
  # For example, patches to configure GCP-specific storage options for PersistentVolumeClaims
  # (e.g., using specific StorageClass like 'premium-rwo' or 'standard-rwo'),
  # or BackendConfig for GKE Ingress if using L7 Load Balancing.
  # - patches/pvc-gcp-storage-config.yaml
  # - patches/ingress-gcp-backendconfig.yaml

# 4. Image Overrides for Google Artifact Registry (GAR)
# This section overrides placeholder image names used in the base manifests
# with actual GAR repository URIs for the GCP environment.
# Replace YOUR_GCP_REGION, YOUR_GCP_PROJECT_ID, and YOUR_ARTIFACT_REGISTRY_REPO_ID
# with your actual values from your GCP setup and Terraform outputs.
# The image tag (e.g., 'latest' or a specific version) should also be set as appropriate.
# The image name part (e.g., "atomic-functions") should match what's pushed to GAR.
# The base placeholder names are like "placeholder-atomic-functions".
images:
  - name: placeholder-atomic-scheduler # Base name for Optaplanner image
    # Example: us-central1-docker.pkg.dev/your-gcp-project-id/your-ar-repo-id/atomic-scheduler
    newName: YOUR_GCP_REGION-docker.pkg.dev/YOUR_GCP_PROJECT_ID/YOUR_ARTIFACT_REGISTRY_REPO_ID/atomic-scheduler
    newTag: latest # Or a specific Git SHA, version tag, etc.

  - name: placeholder-atomic-functions # Base name for Functions service image
    newName: YOUR_GCP_REGION-docker.pkg.dev/YOUR_GCP_PROJECT_ID/YOUR_ARTIFACT_REGISTRY_REPO_ID/atomic-functions
    newTag: latest

  - name: placeholder-atomic-handshake # Base name for Handshake service image
    newName: YOUR_GCP_REGION-docker.pkg.dev/YOUR_GCP_PROJECT_ID/YOUR_ARTIFACT_REGISTRY_REPO_ID/atomic-handshake
    newTag: latest

  - name: placeholder-atomic-oauth # Base name for OAuth service image
    newName: YOUR_GCP_REGION-docker.pkg.dev/YOUR_GCP_PROJECT_ID/YOUR_ARTIFACT_REGISTRY_REPO_ID/atomic-oauth
    newTag: latest

  - name: placeholder-atomic-app # Base name for App (frontend) service image
    newName: YOUR_GCP_REGION-docker.pkg.dev/YOUR_GCP_PROJECT_ID/YOUR_ARTIFACT_REGISTRY_REPO_ID/atomic-app
    newTag: latest

# Common Labels or Annotations for this overlay (optional)
# These would apply to all resources defined or included by this kustomization if uncommented.
# commonLabels:
#   cloud-provider: gcp
#   overlay: gcp-specific
#
# commonAnnotations:
#   note: "Configuration specific to GCP deployment environment"
