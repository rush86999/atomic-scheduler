# deploy/kubernetes/overlays/azure/patches/update-secret-references-azure.yaml
# This file contains strategic merge patches to update secret references
# for the Azure overlay, pointing to secrets synced by SecretProviderClasses from Azure Key Vault.

# --- Patch for Functions Deployment ---
# Base 'functions-secret' -> SPC 'functions-app-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: functions
  namespace: functions
spec:
  template:
    spec:
      containers:
      - name: functions
        envFrom: # Replaces the existing envFrom array
          - secretRef:
              name: functions-app-credentials-azure # Patched
          - configMapRef: # Must re-state if present in base
              name: functions-configmap

# --- Patch for App Deployment ---
# Base 'app-secret' -> SPC 'app-credentials-azure'
# This patches both the 'envFrom' and specific 'env' vars that referenced 'app-secret'.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: app
spec:
  template:
    spec:
      containers:
      - name: app
        envFrom: # Replaces the 'envFrom' part
          - secretRef:
              name: app-credentials-azure # Patched
          - configMapRef:
              name: app-configmap
        env: # Attempts to merge/replace individual env vars by name
          - name: HASURA_GRAPHQL_ADMIN_SECRET
            valueFrom:
              secretKeyRef:
                name: app-credentials-azure # Patched
                key: HASURA_GRAPHQL_ADMIN_SECRET
          - name: GOOGLE_CLIENT_ID_ATOMIC_WEB
            valueFrom:
              secretKeyRef:
                name: app-credentials-azure # Patched
                key: GOOGLE_CLIENT_ID_ATOMIC_WEB
          - name: GOOGLE_CLIENT_SECRET_ATOMIC_WEB
            valueFrom:
              secretKeyRef:
                name: app-credentials-azure # Patched
                key: GOOGLE_CLIENT_SECRET_ATOMIC_WEB
          - name: ZOOM_IV_FOR_PASS
            valueFrom:
              secretKeyRef:
                name: app-credentials-azure # Patched
                key: ZOOM_IV_FOR_PASS
          - name: ZOOM_PASS_KEY
            valueFrom:
              secretKeyRef:
                name: app-credentials-azure # Patched
                key: ZOOM_PASS_KEY

# --- Patch for Handshake Deployment ---
# Base 'handshake-secret' -> SPC 'handshake-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: handshake
  namespace: handshake
spec:
  template:
    spec:
      containers:
      - name: handshake
        envFrom:
          - secretRef:
              name: handshake-credentials-azure # Patched
          - configMapRef:
              name: handshake-configmap

# --- Patch for OAuth Deployment ---
# Base 'oauth-secret' -> SPC 'oauth-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth
  namespace: oauth
spec:
  template:
    spec:
      containers:
      - name: oauth
        envFrom:
          - secretRef:
              name: oauth-credentials-azure # Patched
          - configMapRef:
              name: oauth-configmap

# --- Patch for PostgreSQL StatefulSet ---
# Base 'postgres-secret' -> SPC 'postgres-credentials-azure'
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
spec:
  template:
    spec:
      containers:
      - name: postgres
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials-azure # Patched
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials-azure # Patched
              key: POSTGRES_PASSWORD

# --- Patch for MinIO Deployment ---
# Base 'minio-secret' -> SPC 'minio-credentials-azure'
# Keys in minio-credentials-azure are MINIO_ROOT_USER, MINIO_ROOT_PASSWORD (mapped from KV STORAGE-ACCESS-KEY etc.)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  template:
    spec:
      containers:
      - name: minio
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials-azure # Patched
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials-azure # Patched
              key: MINIO_ROOT_PASSWORD

# --- Patch for Supertokens Deployment ---
# Base 'supertokens-db-secret' -> SPC 'supertokens-db-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supertokens-core
  namespace: supertokens
spec:
  template:
    spec:
      containers:
      - name: supertokens
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: supertokens-db-credentials-azure # Patched
              key: DB_USER # Key in the K8s Secret (from KV objectName POSTGRES-USER)
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supertokens-db-credentials-azure # Patched
              key: DB_PASSWORD # Key in the K8s Secret (from KV objectName POSTGRES-PASSWORD)
        - name: POSTGRESQL_HOST
          valueFrom:
            secretKeyRef:
              name: supertokens-db-credentials-azure # Patched
              key: DB_HOST # Assuming DB_HOST is also in this synced secret if needed, or it's from ConfigMap
                           # Base supertokens manifest sourced all DB parts from secret.
        - name: POSTGRESQL_PORT
          valueFrom:
            secretKeyRef:
              name: supertokens-db-credentials-azure
              key: DB_PORT
        - name: POSTGRESQL_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: supertokens-db-credentials-azure
              key: DB_NAME

# --- Patch for Hasura Deployment ---
# Base 'hasura-secret' -> SPC 'hasura-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasura-graphql-engine
  namespace: hasura
spec:
  template:
    spec:
      containers:
      - name: hasura
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: DB_NAME
        - name: HASURA_GRAPHQL_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: HASURA_GRAPHQL_JWT_SECRET
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: hasura-credentials-azure # Patched
              key: HASURA_GRAPHQL_ADMIN_SECRET

# --- Patch for Optaplanner Deployment ---
# Base 'optaplanner-secret' -> SPC 'optaplanner-credentials-azure'
apiVersion: apps/v1
kind: Deployment
metadata:
  name: optaplanner
  namespace: optaplanner
spec:
  template:
    spec:
      containers:
      - name: optaplanner
        env:
        - name: QUARKUS_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: optaplanner-credentials-azure # Patched
              key: POSTGRES_USER # Key in K8s Secret (from KV objectName POSTGRES-USER)
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: optaplanner-credentials-azure # Patched
              key: POSTGRES_PASSWORD # Key in K8s Secret (from KV objectName POSTGRES-PASSWORD)
        - name: PASSWORD # Optaplanner's own API auth password
          valueFrom:
            secretKeyRef:
              name: optaplanner-credentials-azure # Patched
              key: API_TOKEN # Key in K8s Secret (from KV objectName API-TOKEN)
